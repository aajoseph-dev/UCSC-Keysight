Below is an example Python class that encapsulates the subset of SCPI commands related to the display functionality of the EDU36311A power supply. This class includes methods to enable or disable the display and to query the current status of the display.

```python
import pyvisa

class EDU36311APowerSupply:
    def __init__(self, resource_name):
        self.rm = pyvisa.ResourceManager()
        self.instr = self.rm.open_resource(resource_name)
    
    def display_enable(self, enable):
        """
        Enables or disables the display of the EDU36311A power supply.
        
        Args:
            enable (bool): True to enable the display, False to disable it.
        """
        state = 'ON' if enable else 'OFF'
        self.instr.write(f':DISPlay:ENABle {state}')
    
    def query_display_enable(self):
        """
        Queries the current state of the display of the EDU36311A power supply.
        
        Returns:
            bool: True if the display is enabled, False otherwise.
        """
        response = self.instr.query(':DISPlay:ENABle?')
        return True if response.strip().upper() == 'ON' else False
    
    def close(self):
        """
        Closes the connection to the EDU36311A power supply.
        """
        self.instr.close()

# Example usage:
if __name__ == '__main__':
    # Assuming the device's VISA address is 'USB0::0x2A8D::0x1301::MY12345678::INSTR'
    psu = EDU36311APowerSupply('USB0::0x2A8D::0x1301::MY12345678::INSTR')
    
    # Enable the display
    psu.display_enable(True)
    
    # Query the display status
    is_display_enabled = psu.query_display_enable()
    print(f'Display Enabled: {is_display_enabled}')
    
    # Disable the display
    psu.display_enable(False)
    
    # Close the connection
    psu.close()
```

Make sure to replace `'USB0::0x2A8D::0x1301::MY12345678::INSTR'` with the actual VISA address of your EDU36311A power supply. You can find this address using the NI-VISA or Keysight Connection Expert software on your computer.

This class uses the `pyvisa` library to handle the SCPI communication, which is a common library for instrument control in Python. You can install `pyvisa` using pip:

```shell
pip install pyvisa
```

The `EDU36311APowerSupply` class has methods to enable/disable the display and to query the current status. The `close` method is also included to properly close the connection to the device when done.