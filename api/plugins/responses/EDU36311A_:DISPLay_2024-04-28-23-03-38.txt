Based on your context and instructions, here is a Python class that encapsulates the subset of SCPI commands for controlling the display of the EDU36311A power supply. This class includes methods to enable and disable the display, as well as to query the current state of the display.

```python
import pyvisa

class EDU36311ADisplayControl:
    def __init__(self, resource_name):
        # Initialize the connection to the power supply via VISA
        self.rm = pyvisa.ResourceManager()
        self.instrument = self.rm.open_resource(resource_name)
        
    def enable_display(self):
        # Enables the display on the power supply
        self.instrument.write(":DISPlay:ENABle ON")
        
    def disable_display(self):
        # Disables the display on the power supply to increase speed or for security
        self.instrument.write(":DISPlay:ENABle OFF")
        
    def query_display_state(self):
        # Queries the current state of the display (ON or OFF)
        return self.instrument.query(":DISPlay:ENABle?")
        
    def close(self):
        # Close the VISA connection
        self.instrument.close()

# Example usage
if __name__ == "__main__":
    # Substitute 'USB0::0x2A8D::0x1202::MY1234567::INSTR' with your actual resource name
    resource_name = 'USB0::0x2A8D::0x1202::MY1234567::INSTR'
    power_supply_display = EDU36311ADisplayControl(resource_name)
    
    try:
        # Enable the display
        power_supply_display.enable_display()
        
        # Query and print the display state
        display_state = power_supply_display.query_display_state()
        print(f"Display state: {'ON' if display_state.strip() == '1' else 'OFF'}")
        
        # Disable the display for testing purposes
        power_supply_display.disable_display()
        
    finally:
        # Ensure that the connection to the instrument is closed properly
        power_supply_display.close()
```

Please note that you need to replace `'USB0::0x2A8D::0x1202::MY1234567::INSTR'` with the actual resource name of your EDU36311A power supply, which you can find using the PyVISA `list_resources` method or NI-VISA software.

The class `EDU36311ADisplayControl` demonstrates how to encapsulate the SCPI commands for the display control of the EDU36311A power supply in a Python class. The class provides methods to enable and disable the display and to query its current state.

Remember to install PyVISA (`pip install pyvisa`) if you haven't already, as it is required for communication with the instrument over USB using the VISA interface.