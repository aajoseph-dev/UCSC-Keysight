```python
import visa

class EDU36311APowerSupply:
    def __init__(self, resource_name):
        # Assuming PyVISA as the backend library for VISA communication
        self.rm = visa.ResourceManager()
        self.instrument = self.rm.open_resource(resource_name)
        self.instrument.timeout = 5000  # Set timeout to 5 seconds

    def display_enable(self, state):
        """
        Enables or disables the display of the power supply.
        :param state: boolean (True for ON, False for OFF)
        """
        if state:
            self.instrument.write(':DISPlay:ENABle ON')
        else:
            self.instrument.write(':DISPlay:ENABle OFF')

    def query_display_status(self):
        """
        Queries the display status of the power supply.
        :return: boolean (True for ON, False for OFF)
        """
        response = self.instrument.query(':DISPlay:ENABle?')
        return True if response.strip() == '1' else False

    def close(self):
        """
        Closes the VISA connection to the power supply.
        """
        self.instrument.close()
        self.rm.close()

# Example usage
if __name__ == "__main__":
    resource_name = 'USB0::0x2A8D::0x1202::MY1234567::INSTR'  # Replace with your actual resource name
    power_supply = EDU36311APowerSupply(resource_name)

    try:
        # Enable the display
        power_supply.display_enable(True)
        print("Display enabled.")

        # Query the display status
        display_status = power_supply.query_display_status()
        print(f"Display status is {'ON' if display_status else 'OFF'}.")

        # Disable the display to speed up operations
        power_supply.display_enable(False)
        print("Display disabled for speed optimization.")

    finally:
        # Make sure we close the connection regardless of what happens
        power_supply.close()
        print("Connection to power supply closed.")
```

In this example, a Python class `EDU36311APowerSupply` is created to handle a subset of SCPI commands for the EDU36311A power supply. The class includes methods to enable/disable the display and query its status. The `visa` package is used for communication with the device, which is commonly handled by the PyVISA library in Python.

This class can be expanded to include more SCPI commands as needed for the specific application of battery testing. The example usage demonstrates how to create an instance of the class, use its methods, and properly close the connection to the device.