Based on the context and instructions provided, here is an example of a Python class that encapsulates a subset of SCPI commands for controlling the display of the EDU36311A power supply device:

```python
import pyvisa

class EDU36311ADisplayControl:
    def __init__(self, resource_name):
        self.rm = pyvisa.ResourceManager()
        self.instr = self.rm.open_resource(resource_name)

    def enable_display(self, enable=True):
        """Enables or disables the display on the EDU36311A power supply."""
        command = ":DISPlay:ENABle {}".format('ON' if enable else 'OFF')
        self.instr.write(command)

    def query_display_status(self):
        """Queries the current status of the display (ON/OFF)."""
        response = self.instr.query(":DISPlay:ENABle?")
        return True if response.strip() == '1' else False

    def set_display_mode(self, mode):
        """Changes the front panel display mode (V-V, I-I, V-I)."""
        if mode not in ['V-V', 'I-I', 'V-I']:
            raise ValueError("Invalid mode. Choose 'V-V', 'I-I', or 'V-I'.")
        self.instr.write(":DISPlay {}".format(mode))

    def close(self):
        """Closes the connection to the instrument."""
        self.instr.close()

# Example usage:
if __name__ == "__main__":
    try:
        # Instantiate the display control for the EDU36311A power supply
        display_control = EDU36311ADisplayControl('USB0::0x2A8D::0x1202::MY1234567::INSTR')

        # Enable the display
        display_control.enable_display(True)
        print("Display enabled.")

        # Query and print the display status
        status = display_control.query_display_status()
        print("Display is currently {}.".format('ON' if status else 'OFF'))

        # Change the display mode to V-I
        display_control.set_display_mode('V-I')
        print("Display mode set to V-I.")

    except pyvisa.VisaIOError as e:
        print("Error communicating with the device:", e)
    
    finally:
        # Ensure the instrument connection is closed
        display_control.close()
```

Please make sure to replace `'USB0::0x2A8D::0x1202::MY1234567::INSTR'` with the actual USB resource name of your EDU36311A device. This resource name can be obtained by using the PyVISA `list_resources()` method.

Note: This is a basic example and does not include full error handling or all possible SCPI commands for the device. Additional functionality and error checking should be implemented based on the specific requirements of the test setup and the instrument's SCPI command reference.